@startuml Store
start
group Store_Piece {
: Parse command;
 note 
"/operation/store_piece"
end note
 if(!output_bucket.empty) then 
    : Send status message through web hook;
    note
    Status
    ----
    {
    "state"  : "Store_Piece"
    "status" : "ERROR_OUTPUT_NOT_EMPTY"
    }
    end note
    :Await OK Command;
    : GOTO AwaitCommand State;
    kill
 endif
: Move Image Bucket to Camera;
: Ask EspCam To Take Picture;
: Wait for Response;
note
Min Response
----
"Type": "Screw3"
"Amount": x
"Mixed" : false
end note
if(no_response) then
: Send status message through web hook;
    note
    Status
    ----
    {
    "state"  : "Store_Piece"
    "status" : "ERROR_NO_RESPONSE"
    }
    end note
    :Await OK Command;
    : GOTO EspCam Setup State;
    kill
endif
if (mixed == true) then
: Send status message through web hook;
    note
    Status
    ----
    {
    "state"  : "Store_Piece"
    "status" : "ERROR_MIXED_INPUT"
    }
    end note
    :Await OK Command;
    : GOTO AwaitCommand State;
    kill
endif
: find best bin to store pieces that fits amount;
if(best_bin not found) then
    : Send status message through web hook;
    note
    Status
    ----
    {
    "state"  : "Store_Piece"
    "status" : "ERROR_FULL"
    }
    end note
    :Await OK Command;
    : GOTO AwaitCommand State;
    kill
endif
: go to best_bin;
: read bin rfid;
if (best_bin(id) != rfid) then
    : Send status message through web hook;
    note
    Status
    ----
    {
    "state"  : "Store_Piece"
    "status" : "ERROR_BIN_MISMATCH"
    }
    end note 
    :Await OK Command;
    : GOTO AwaitCommand State;
    kill
endif
: get_bin;
: move bin to output_bucket;
: store bin on output_bucket;
: read bin rfid;
: calculate best empty bin position;
: move to best empty bin position;
: store bin on output_bucket;
: move image bin to funnel;
: drop pieces into funnel;
: update weight;
: get bin;
: move bin to last position;
: store bin;
: Send status message through web hook;
note
    Status
    ----
    {
    "state"  : "Store_Piece"
    "status" : "OK"
    }
    end note
    : Await OK Command;
    : GOTO AwaitCommand State;
}
end
@enduml